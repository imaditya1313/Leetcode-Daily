class Solution:
    def numberOfRounds(self, loginTime: str, logoutTime: str) -> int:
        if loginTime<logoutTime:
            a=int(loginTime[3:5])
            if int(loginTime[3:5])%15!=0:
                a = a- int(loginTime[3:5])%15 + 15
            b = int(logoutTime[3:5])
            if int(logoutTime[3:5])%15!=0:
                b = b - int(logoutTime[3:5])%15
            n = int(((int(logoutTime[:2])-int(loginTime[:2]))*60 + (b - a))/15)
        else:
            if int(loginTime[3:5])%15!=0:
                a = int(loginTime[3:5])- int(loginTime[3:5])%15 + 15
            else:
                a = int(loginTime[3:5])
            if int(logoutTime[3:5])%15!=0:
                b = int(logoutTime[3:5])- int(logoutTime[3:5])%15
            else:
                b = int(logoutTime[3:5])
            n = int(((int(logoutTime[:2])+24-int(loginTime[:2]))*60+(b-a))/15)
        return max(0,n)
